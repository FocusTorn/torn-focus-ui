// cSpell:disable

// fre		forEach loop                        array.forEach(currentItem => {})
// fof		for ... of loop                     for(const item of object) {}
// fin		for ... in loop                     for(const item in object) {}
// anfn	    creates an anonymous function       (params) => {}
// nfn		creates a named function            const add = (params) => {}
// dob		destructing object syntax           const {rename} = fs
// dar		destructing array syntax            const [first, second] = [1,2]
// sti		set interval helper method          setInterval(() => {});
// sto		set timeout helper method           setTimeout(() => {});
// prom	    creates a new Promise               return new Promise((resolve, reject) => {});
// thenc    adds then/catch to a promise        .then((res) => {}).catch((err) => {});


// cas		console alert method				 console.assert(expression, object)
// ccl		console clear						 console.clear()
// cco		console count						 console.count(label)
// cdb		console debug						 console.debug(object)
// cdi		console dir						     console.dir
// cer		console error						 console.error(object)
// cgr		console group						 console.group(label)
// cge		console groupEnd					 console.groupEnd()
// clg		console log						     console.log(object)
// clo		console log object with name		 console.log('object :>> ', object);
// ctr		console trace						 console.trace(object)
// cwa		console warn						 console.warn
// cin		console info						 console.info
// clt		console table						 console.table
// cti		console time						 console.time
// cte		console timeEnd						 console.timeEnd





// Pressing ctrl + alt + L (Windows)



// [14:21:22.569]  Evnt: triggered = Config Change
//                 Info: text = info.text
//                 Info: color = info.color







